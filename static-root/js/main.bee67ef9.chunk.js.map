{"version":3,"sources":["lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","concat","responseType","open","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","message","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","react_default","a","createElement","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","_useState","useState","_useState2","Object","slicedToArray","didLookup","setDidLookup","_useState3","_useState4","profile","setProfile","_useState5","_useState6","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","_wrapRegExp","tweetid","urlTweetId","groups","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","_useState7","_useState8","tweetsDidSet","setTweetsDidSet","final","toConsumableArray","newTweets","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","assign","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","src_App","tweetsEl","MyComponent","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.bee67ef9.chunk.js","sourcesContent":["function getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data);\n  }\n\n  const xhr = new XMLHttpRequest();\n  const url = `http://localhost:80/api${endpoint}`;\n\n  xhr.responseType = \"json\";\n  xhr.open(method, url);\n\n  const csrftoken = getCookie(\"csrftoken\");\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\n  if (csrftoken) {\n    //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\n  }\n\n  xhr.onload = function () {\n    if (xhr.status === 403) {\n      const detail = xhr.response.detail;\n      if(detail === \"Authentication credentials were not provided.\"){\n        if(window.location.href.indexOf(\"login\") === -1){ //stop refreshing if login\n          window.location.href = \"/login?showLoginRequired=true\"\n        }\n      }\n    }\n    callback(xhr.response, xhr.status);\n  };\n  xhr.onerror = function (e) {\n    console.log(\"error\", e);\n    callback({ message: \"The request was an error\" }, 400);\n  };\n  //console.log(jsonData)\n  xhr.send(jsonData);\n}\n","import { backendLookup } from \"../lookup\";\n\nexport function apiTweetCreate(newTweet, callback) {\n  backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n  const data = { id: tweetId, action: action };\n  backendLookup(\"POST\", \"/tweets/action/\", callback, data);\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n  backendLookup(\"GET\", `/tweets/${tweetId}/`, callback);\n}\n\n//new\nexport function apiTweetFeed(callback, nextUrl) {\n  let endpoint = \"/tweets/feed/\";\n\n  if (nextUrl !== null && nextUrl !== undefined) {\n    //endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    endpoint = nextUrl.replace(\"http://localhost/api\", \"\");\n  }\n\n  backendLookup(\"GET\", endpoint, callback);\n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n  let endpoint = \"/tweets/\";\n  if (username) {\n    endpoint = `/tweets/?username=${username}`;\n  }\n\n  if (nextUrl !== null && nextUrl !== undefined) {\n    //new\n    //endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    endpoint = nextUrl.replace(\"http://localhost/api\", \"\");\n  }\n\n  backendLookup(\"GET\", endpoint, callback);\n}\n","import React from \"react\";\n\nimport { apiTweetAction } from \"./lookup\";\n\nexport function ActionBtn(props) {\n    const { tweet, action, didPerformAction } = props;\n    const likes = tweet.likes ? tweet.likes : 0;\n  \n    const className = props.className\n      ? props.className\n      : \"btn btn-primary btn-sm\";\n    const actionDisplay = action.display ? action.display : \"Action\"; //ensure that we have an action\n  \n    const handleActionBackendEvent = (response, status) => {\n      console.log(response, status);\n  \n      if ((status === 200 || status === 201) && didPerformAction) {\n        didPerformAction(response, status);\n      }\n    };\n    const handleClick = (event) => {\n      event.preventDefault();\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\n    };\n  \n    const display =\n      action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\n    return (\n      <button className={className} onClick={handleClick}>\n        {display}\n      </button>\n    );\n  }","import React from \"react\";\n\nexport function UserLink(props) {\n  const { username } = props;\n\n  const handleUserLink = (event) => {\n    window.location.href = `/profiles/${username}`;\n  };\n\n  return (\n    <span className=\"pointer\" onClick={handleUserLink}>\n      {props.children}\n    </span>\n  );\n}\n\nexport function UserDisplay(props) {\n  //const { user, includeFullName } = props;\n  const { user, includeFullName, hideLink } = props;\n  const nameDisplay =\n    includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\n\n    /*\n  return <React.Fragment>\n      {nameDisplay}\n      <UserLink username={user.username}>@{user.username}</UserLink>\n    </React.Fragment>\n    */\n  \n  return <React.Fragment>\n      {nameDisplay}\n      {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n    </React.Fragment>\n}\n\nexport function UserPicture(props) {\n  //const { user } = props;\n  const {user, hideLink} = props\n  const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n                      {user.username[0]}\n                     </span>\n    /*\n  return <UserLink username={user.username}>\n      <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\n        {user.username[0]}\n      </span>\n    </UserLink>\n    */\n   \n  return hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\n}\n","import React from \"react\";\nimport numeral from \"numeral\";\n\nexport function DisplayCount(props) {\n  return (\n    <span className={props.className}>\n      {numeral(props.children).format(\"0a\")}\n    </span>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { apiProfileDetail, apiProfileFollowToggle } from \"./lookup\";\n\nimport { UserDisplay, UserPicture } from \"./components\";\n\nimport { DisplayCount } from \"./utils\"; \n\nfunction ProfileBadge(props) {\n  const { user, didFollowToggle, profileLoading } = props;\n\n  let currentVerb = user && user.is_following ? \"Unfollow\" : \"Follow\";\n  currentVerb = profileLoading ? \"Loading...\" : currentVerb;\n  const handleFollowToggle = (event) => {\n    event.preventDefault();\n    if (didFollowToggle && !profileLoading) {\n      didFollowToggle(currentVerb);\n    }\n  };\n\n  return user ? (\n    <div>\n      <UserPicture user={user} hideLink />\n      <p>\n        <UserDisplay user={user} includeFullName hideLink />\n      </p>\n      <p>\n        <DisplayCount>{user.follower_count}</DisplayCount>{\" \"}\n        {user.follower_count === 1 ? \"follower\" : \"followers\"}{\" \"}\n      </p>\n      <p>\n        <DisplayCount>{user.following_count}</DisplayCount> following\n      </p>\n      <p>{user.location}</p>\n      <p>{user.bio}</p>\n      <button className=\"btn btn-primary\" onClick={handleFollowToggle}>\n        {currentVerb}\n      </button>\n    </div>\n  ) : null;\n}\n\nexport function ProfileBadgeComponent(props) {\n  const { username } = props;\n\n  //lookup\n  const [didLookup, setDidLookup] = useState(false);\n  const [profile, setProfile] = useState(null);\n  const [profileLoading, setProfileLoading] = useState(false); \n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setProfile(response);\n    }\n  };\n  useEffect(() => {\n    if (didLookup === false) {\n      apiProfileDetail(username, handleBackendLookup);\n      setDidLookup(true);\n    }\n  }, [username, didLookup, setDidLookup]);\n\n  const handleNewFollow = (actionVerb) => {\n    apiProfileFollowToggle(username, actionVerb, (response, status) => {\n      console.log(response, status);\n      if (status === 200) {\n        setProfile(response);\n      }\n      setProfileLoading(false);\n    });\n    setProfileLoading(true);\n  };\n\n  return didLookup === false ? (\n    \"Loading...\"\n  ) : profile ? (\n    <ProfileBadge\n      user={profile}\n      didFollowToggle={handleNewFollow}\n      profileLoading={profileLoading}\n    />\n  ) : null;\n}\n","import { backendLookup } from \"../lookup\";\n\nexport function apiProfileDetail(username, callback) {\n  backendLookup(\"GET\", `/profiles/${username}/`, callback);\n}\n\n//new\nexport function apiProfileFollowToggle(username, action, callback) {\n  const data = { action: `${action && action}`.toLowerCase() };\n  backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data);\n}\n","import React, { useState } from \"react\";\n\nimport { ActionBtn } from \"./buttons\";\n\nimport { UserDisplay, UserPicture } from \"../profiles\";\n\nexport function ParentTweet(props) {\n  const { tweet } = props;\n  return tweet.parent ? (\n    <Tweet\n      isRetweet\n      retweeter={props.retweeter}\n      hideActions\n      className={\" \"}\n      tweet={tweet.parent}\n    />\n  ) : null;\n}\n\nexport function Tweet(props) {\n  const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props;\n\n  const [actionTweet, setActionTweet] = useState(\n    props.tweet ? props.tweet : null\n  );\n\n  let className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\n  className =\n    isRetweet === true ? `${className} p-2 border rounded` : className; //add a border if it's retweet\n\n  const path = window.location.pathname;\n  const match = path.match(/(?<tweetid>\\d+)/);\n  const urlTweetId = match ? match.groups.tweetid : -1;\n\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = (event) => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  /*\n  return (\n    <div className={className}>\n      {isRetweet === true && (\n        <div className=\"mb-2\">\n          <span className=\"small text-muted\">\n            Retweet via <UserLink user={retweeter} />\n          </span>\n        </div>\n      )}\n      <div className=\"d-flex\">\n        <div className=\"\">\n          <UserPicture user={tweet.user} />\n        </div>\n        <div className=\"col-11\">\n          <div>\n            <p>\n              <UserLink includeFullName user={tweet.user} />\n            </p>\n            <p>{tweet.content}</p>\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\n          </div>\n          <div className=\"btn btn-group px-0\">\n            {actionTweet && hideActions !== true && (\n              <React.Fragment>\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"like\", display: \"Likes\" }}\n                />\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"unlike\", display: \"Unlike\" }}\n                />\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"retweet\", display: \"Retweet\" }}\n                />\n              </React.Fragment>\n            )}\n            {isDetail === true ? null : (\n              <button\n                className=\"btn btn-outline-primary btn-sm\"\n                onClick={handleLink}\n              >\n                View\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n  */\n\n  return (\n    <div className={className}>\n      {isRetweet === true && (\n        <div className=\"mb-2\">\n          <span className=\"small text-muted\">\n            Retweet via <UserDisplay user={retweeter} />\n          </span>\n        </div>\n      )}\n      <div className=\"d-flex\">\n        <div className=\"\">\n          <UserPicture user={tweet.user} />\n        </div>\n        <div className=\"col-11\">\n          <div>\n            <p>\n              <UserDisplay includeFullName user={tweet.user} />\n            </p>\n            <p>{tweet.content}</p>\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\n          </div>\n          <div className=\"btn btn-group px-0\">\n            {actionTweet && hideActions !== true && (\n              <React.Fragment>\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"like\", display: \"Likes\" }}\n                />\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"unlike\", display: \"Unlike\" }}\n                />\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"retweet\", display: \"Retweet\" }}\n                />\n              </React.Fragment>\n            )}\n            {isDetail === true ? null : (\n              <button\n                className=\"btn btn-outline-primary btn-sm\"\n                onClick={handleLink}\n              >\n                View\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { apiTweetList } from \"./lookup\";\n\nimport { Tweet } from \"./detail\";\n\nexport function TweetsList(props) {\n  //console.log(props.username)\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [nextUrl, setNextUrl] = useState(null); \n\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit); //[...content] means a new list with the content\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          setTweetsInit(response.results);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n      apiTweetList(props.username, handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n  //new\n  const handleDidRetweet = (newTweet) => {\n    const updateTweetsInit = [...tweetsInit]; //grabbing tweetsInit list\n    updateTweetsInit.unshift(newTweet); //add newTweet to the beginning of updateTweetsInit\n    setTweetsInit(updateTweetsInit); //update status\n    const updateFinalTweets = [...tweets]; //grabbing tweets list\n    updateFinalTweets.unshift(tweets); //add tweets to the beginning of updateFinalTweets\n    setTweets(updateFinalTweets); //update status\n  };\n\n  const handleLoadNext = (event) => {\n    event.preventDefault()\n    if (nextUrl !== null) {\n      const handleLoadNextResponse = (response, status) =>{\n        if (status === 200){\n          setNextUrl(response.next)\n          const newTweets = [...tweets].concat(response.results)\n          setTweetsInit(newTweets)\n          setTweets(newTweets)\n        } else {\n          alert(\"There was an error\")\n        }\n      }\n      apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n    }\n  }\n\n  /*\n  return (\n    <React.Fragment>\n      {tweets.map((item, index) => {\n        return (\n          <Tweet\n            tweet={item}\n            didRetweet={handleDidRetweet}\n            className=\"my-5 py-5 border bg-white text-dark\"\n            key={`${index}-{item.id}`}\n          />\n        );\n      })}\n      {nextUrl !== null && (\n        <button className=\"btn btn-outline-primary\">Load next</button>\n      )}\n    </React.Fragment>\n  );\n  */\n  return (\n    <React.Fragment>\n      {tweets.map((item, index) => {\n        return (\n          <Tweet\n            tweet={item}\n            didRetweet={handleDidRetweet}\n            className=\"my-5 py-5 border bg-white text-dark\"\n            key={`${index}-{item.id}`}\n          />\n        );\n      })}\n      {nextUrl !== null && (\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\n          Load next\n        </button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport { apiTweetCreate } from \"./lookup\";\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef();\n\n  const { didTweet } = props;\n\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(response);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n\n    console.log(\"new value\", newVal);\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n\n    textAreaRef.current.value = \"\"; //after the submission, clear the textarea\n  };\n\n  return (\n    <div className={props.className}>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          ref={textAreaRef}\n          required={true}\n          className=\"form-control\"\n          name=\"tweet\"\n        ></textarea>\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\n          Tweet\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { apiTweetFeed } from \"./lookup\";\n\nimport { Tweet } from \"./detail\";\n\nexport function FeedList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [nextUrl, setNextUrl] = useState(null);\n\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit); //[...content] means a new list with the content\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          setTweetsInit(response.results);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n      apiTweetFeed(handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n  const handleDidRetweet = (newTweet) => {\n    const updateTweetsInit = [...tweetsInit]; //grabbing tweetsInit list\n    updateTweetsInit.unshift(newTweet); //add newTweet to the beginning of updateTweetsInit\n    setTweetsInit(updateTweetsInit); //update status\n    const updateFinalTweets = [...tweets]; //grabbing tweets list\n    updateFinalTweets.unshift(tweets); //add tweets to the beginning of updateFinalTweets\n    setTweets(updateFinalTweets); //update status\n  };\n\n  const handleLoadNext = (event) => {\n    event.preventDefault();\n    if (nextUrl !== null) {\n      const handleLoadNextResponse = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          const newTweets = [...tweets].concat(response.results);\n          setTweetsInit(newTweets);\n          setTweets(newTweets);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n      apiTweetFeed(handleLoadNextResponse, nextUrl);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {tweets.map((item, index) => {\n        return (\n          <Tweet\n            tweet={item}\n            didRetweet={handleDidRetweet}\n            className=\"my-5 py-5 border bg-white text-dark\"\n            key={`${index}-{item.id}`}\n          />\n        );\n      })}\n      {nextUrl !== null && (\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\n          Load next\n        </button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { TweetsList } from \"./list\";\nimport { TweetCreate } from \"./create\";\nimport { apiTweetDetail } from \"./lookup\";\nimport { Tweet } from \"./detail\";\nimport { FeedList } from \"./feed\";  //new\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([]);\n\n  const canTweet = props.canTweet === \"false\" ? false : true;\n\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets];\n\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n\n  return (\n    <div className={props.className}>\n      {canTweet === true && (\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\n      )}\n      <FeedList newTweets={newTweets} {...props} />\n    </div>\n  );\n}\n\nexport function TweetsComponent(props) {\n  const [newTweets, setNewTweets] = useState([]);\n\n  const canTweet = props.canTweet === \"false\" ? false : true;\n\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets];\n\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n\n  return (\n    <div className={props.className}>\n      {canTweet === true && (\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\n      )}\n      <TweetsList newTweets={newTweets} {...props} />\n    </div>\n  );\n}\n\nexport function TweetDetailComponent(props) {\n  const { tweetId } = props; //grab id from props\n  const [didLookup, setDidLookup] = useState(false);\n  const [tweet, setTweet] = useState(null);\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response);\n    } else {\n      alert(\"There was an error finding your tweet.\");\n    }\n  };\n  useEffect(() => {\n    if (didLookup === false) {\n      apiTweetDetail(tweetId, handleBackendLookup);\n      setDidLookup(true);\n    }\n  }, [tweetId, didLookup, setDidLookup]);\n\n  return tweet === null ? null : (\n    <Tweet tweet={tweet} className={props.className} />\n  ); //return the requested tweet with tweetID found, or return null\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n//import {TweetsList} from './tweets'\nimport {TweetsComponent} from './tweets'\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n\n        <div>\n          <TweetsComponent />\n        </div>\n        \n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ProfileBadgeComponent } from \"./profiles\"; \nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { TweetsComponent, TweetDetailComponent, FeedComponent } from \"./tweets\";\n\nconst appEl = document.getElementById(\"root\");\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement;\nconst tweetsEl = document.getElementById(\"tweetme-2\");\nif (tweetsEl) {\n  const MyComponent = e(TweetsComponent, tweetsEl.dataset);\n  ReactDOM.render(MyComponent, tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\");\nif (tweetFeedEl) {\n  const MyComponent = e(FeedComponent, tweetFeedEl.dataset);\n  ReactDOM.render(MyComponent, tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\"); //get all elements with this class\n\n//render for each tweet detail element\ntweetDetailElements.forEach((container) => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n\n\n//new\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\"); //get all elements with this class\n\nuserProfileBadgeElements.forEach((container) => {\n  ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}